#!/usr/bin/env bash

what="$1"
where="$2"
who="${3%\!*}"
whoami="$4"
op="c00kiemon5ter"

sayit() {
    printf -- "PRIVMSG %s :%s %s\n" "${where}" "${newho:-${who}}" "$*"
}

if [[ "${what}" =~ ^[[:alnum:]]+\ *\>\ *[[:alnum:]_-]+ ]]; then
    IFS=\>${IFS} read -r what args  <<< "${what}"
                 read -r newho args <<< "${args}"
elif [[ "${what}" =~ [[:alnum:]]+\ *\>\ *[[:alnum:]_-]+$ ]]; then
    IFS=\> read -r args newho <<< "${what}"
           read -r what args  <<< "${args}"
           read -r newho      <<< "${newho}"
else
    read -r what args <<< "${what}"
fi

commands=(help list ping test fu forever yuno problem sexy cookies cool
pokerface google fortune bewbs gn umad ccc troll temp random f money calc rhyme)
[[ "${what}" == random ]] && what="${commands[RANDOM%${#commands[@]}]}"

case "${what}" in
    JOIN)
        newho="ACTION" sayit "la presentato le herpino, ${who}"
        ;;
    PART)
        newho="ACTION" sayit "bye herp derp, ${who}"
        ;;
    list)
        sayit "${commands[*]}"
        ;;
    help)
        sayit "help yourself!"
        ;;
    bloat)
        who=
        [[ -n "${args}" ]] && sayit "${args} is bloat!" || sayit "bloat is bloat!"
        ;;
    ping)
        [[ -n "${newho}" ]] && sayit "ping!" || sayit "ACK!"
        ;;
    test)
        sayit "tost ready!"
        ;;
    [Ff][Uu])
        sayit "fuuuuuuuuu!"
        ;;
    f)
        sayit "failed"
        ;;
    forever)
        sayit "forever aloooone!"
        ;;
    [yY][uU][nN][oO])
        sayit "Y U NO ${args:-y u no?}"
        ;;
    problem)
        who= sayit "problem, ${args}?"
        ;;
    sexy)
        who="ACTION ${who}" sayit "le sexy time <3 ${args}"
        ;;
    pokerface)
        sayit 'http://i.imgur.com/pKttU.jpg'
        ;;
    cookies)
        [[ "${who}" == "${op}" ]] \
            && sayit "om nom nom nom nom nom nom nom nom nom" \
            || sayit "bake em'"
        ;;
    google)
        who= api='http://ajax.googleapis.com/ajax/services/search/web?v=1.0'
        curl -s --get --data-urlencode "q=${args// /+}" ${api}          \
            | sed 's/{\|,/&\n/g'                                        \
            | sed -n '/unescapedUrl/s/"unescapedUrl":"\(.\+\)".*/\1/p'  \
            | cat -n                                                    \
            | while read -r _n _r; do sayit "${_n}. ${_r}"; done
        ;;
    fortune)
        newho="→" who= sayit "$(/usr/bin/fortune -sea)"
        ;;
    bewbs)
        newho= who=
        [[ "${args}" == "moar" ]] && sayit "(  @  )(  @  )" || sayit "( . )( . )"
        ;;
    gn)
        [[ -n "${newho}" ]] && sayit "sleep tight you weak! ${args}" \
                            || who= sayit "sleep is for the weak."
        ;;
    umad)
        sayit "u mad, bro? ${args}"
        ;;
    ccc)
        newho= who= sayit "cococo-co-combobreaker!"
        ;;
    cool)
        who= sayit "cool.story.bro."
        ;;
    troll)
        sayit "trololololololololololololo"
        ;;
    temp)
        read -r city country _ <<< "${args}"
        [[ -z "$city" ]] && city="Athens" country="Greece"
        args="$(curl -s 'http://www.google.com/ig/api?weather='${city}+${country} | sed -r \
        's:.*city data="(.*)"/><postal.*condition data="(.*)"/><temp_f.*temp_c data="([[:digit:]]+)".*humidity data="(.*%).*:\1 \2 \3\xe2\x84\x83 \4:')"
        args="$(sed -r 's:.*problem_cause.*:Invalid Input!:' <<< "${args}")"
        sayit "${args}"
        ;;
    money)
        if [[ "$args" =~ ^[[:digit:]]+[[:space:]]+[[:alpha:]]+[[:space:]]+[[:alpha:]]+ ]]; then
            read n f t _ <<< "${args}"
            args="$(curl -s 'http://www.google.com/ig/calculator?hl=en&q='${n}${f}=?${t} | sed -r 's/.*"(.+)",.*"(.+)",.*".*/\1 → \2/')"
            [[ "${args}" =~ ^\{ ]] && newho= sayit "no such unit" || sayit "${args}"
        else
            newho= sayit "invalid input"
        fi
        ;;
    calc)
        args="$(bc -l <<< "${args}")"
        [[ -z "${args}" ]] && sayit "err, ..no" \
                           || sayit "${args}"
        ;;
    rhyme)
        [[ -z "${args}" ]] && sayit "hit me, aw, I feel no pain, agh" && return
        mapfile -t args < <(curl -s http://uberspot.ath.cx/rhymefinder/ -F "word=${args}" | \
            sed -n -e '/textarea name="results"/s:.*>\(.*\):\1:' -e 's: | :\n:gp')
        (( ${#args[@]} )) && who= sayit "${args[RANDOM%${#args[@]}]}" \
                          || sayit "oh, this hurts bro, I cant rhyme with yo word'"
        ;;
    url)
        args="$(sed 's_.*\(http://[^[:space:]]\+\).*_\1_' <<< "$args")"
        args="$(curl -s "$args" | sed -n '/<title>/s_.*>\(.\+\)</title>_\1_p')"
        [[ -n "$args" ]] && newho= who= sayit "$args"
        ;;
    echo)
        who= sayit "$args"
        ;;
    [[:alnum:]]*)
        newho= sayit "you don't know what you're talking about, do you?"
        ;;
esac

