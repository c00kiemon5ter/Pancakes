#!/usr/bin/env bash
# writen by Ivan c00kiemon5ter Kanakarakis ~ <ivan.kanak[at]gmail.com>

path="$(dirname "$0")"
sugar="${path}/sugar.conf"
donuts="${path}/donuts"

declare -A servers

[[ -r "${sugar}" ]] && source "${sugar}" ||  {
    printf -- "error: cannot read configuration: %s\n" "${sugar}"
    exit 1
}
[[ -r "${donuts}" ]] || {
    printf -- "error: cannot read commands: %s\n" "${donuts}"
    exit 1
}

[[ "$1" == '-d' ]] && DEBUG=1 || DEBUG=0
: "${prefix:="${HOME}/irc"}"
: "${nickname:=pancakes}"
: "${realname:=cookiebot}"
: "${mode:=+i}"
: "${hostname:=cookiebox}"
: "${servername:=biscuit}"
: "${port:=6667}"

mkdir -p "${prefix}"

for server in "${!servers[@]}"; do
    {
        mkdir -p "${prefix}/${server}"
        exec {ircfd}<> "${prefix}/${server}/${server}.err" 2>&${ircfd}-

        if ! exec {ircfd}<> /dev/tcp/${server}/${port}; then
            printf -- "unable to connect to server: %s:%d\n" "${server}" "${port}"
            continue
        fi

        [[ -n "${passwd}" ]] && printf -- "PASS %s\n" "${passwd}" >&${ircfd}
        printf -- "NICK %s\n" "${nickname}" >&${ircfd}
        printf -- "USER %s %s %s :%s\n" "${nickname}" "${hostname}" "${servername}" "${realname}" >&${ircfd}
        printf -- "MODE %s %s\n" "${nickname}" "${mode}" >&${ircfd}

        while read -r; do # wait to get authed with the server
            (( DEBUG )) && printf -- "%s\n" "$REPLY" >> "${prefix}/${server}/raw.log"
            set -- ${REPLY//$'\r'/}
            [[ "$1" == "PING" ]] && printf -- "PONG %s\n" "$2" >&${ircfd} && continue
            [[ "$2" == "001" ]] && printf -- "connected to: %s -- joining channels..\n" "${server}" && break
        done <&${ircfd}

        for channel in ${servers[${server}]}; do
            printf -- "JOIN %s\n" "${channel}" >&${ircfd}

            mkdir -p "${prefix}/${server}/${channel#\#}"
            fifo="${prefix}/${server}/${channel#\#}/in"
            rm -f "${fifo}" && mkfifo "${fifo}" || {
                printf -- "error: cannot create fifo: %s\n" "${fifo}"
                continue
            }

            {   exec {fffd}<>"${fifo}"
                trap 'exec {fffd}>&-; rm -f "${fifo}";' EXIT

                printf -- "ACTION %s\n" "Heya peoples :]" >&${fffd}

                while read -r -u ${fffd}
                do printf -- "PRIVMSG %s :%s\n" "${channel}" "${REPLY}" >&${ircfd}
                done
            } &

            chanpids+=($!)
        done

        {   trap 'printf -- "QUIT :%s will be back ..\n" "${nickname}" >&${ircfd};
            exec {ircfd}>&-; for pid in "${chanpids[@]}"; do kill "${pid}"; done;' EXIT

            while read -r; do
                (( DEBUG )) && printf -- "%s\n" "$REPLY" >> "${prefix}/${server}/raw.log"

                set -- ${REPLY//$'\r'/}
                [[ "$1" == "PING" ]] && printf -- "PONG %s\n" "$2" >&${ircfd} && continue

                read -r who did where what <<< "${REPLY%}"
                {  [[ "${did}" == "PART" ]] && what=':!PART'; } || \
                {  [[ "${did}" == "JOIN" ]] && what=':!JOIN'; } || \
                   [[ "${did}" == "PRIVMSG" ]] || continue

                printf -- "%s\n" "${REPLY}" >> "${prefix}/${server}/${where#*\#}/$(date +"%F").log"

                [[ "${what}" =~ ^[^\!]*https?:// ]] && what=':!'"${what/#:/url }" # pick up urls and send a !url cmd if not a commant ^!
                [[ "${who%\!*}" != ":${nickname}" && "${what}" =~ ^:\!.+ ]] || continue
                exec "${donuts}" "${what#:\!}" "${where#:}" "${who#:}" "${nickname}" | cut -c -255 >&${ircfd} &
            done <&${ircfd}
        } &
    } &
done

